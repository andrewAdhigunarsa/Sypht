{"version":3,"sources":["component/header/Header.jsx","pages/sypht/file-uploader/FileUploader.jsx","pages/sypht/Sypht.jsx","pages/date-calculator/DateCalculator.jsx","pages/pie-loader/PieLoader.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["StyledNav","styled","nav","StyleUl","ul","StyledLi","li","StyledLink","Link","header","className","to","BASE_URL","CALCULATOR_URL","PIE_LOADER_URL","Component","FileUploader","props","fileSelectHandler","event","console","log","target","files","setState","selectedFile","fileUploadHandler","e","a","preventDefault","accessToken","sessionStorage","getItem","formData","FormData","append","state","res","Axios","post","onUploadProgress","ProgressEvent","uploadedFile","data","onSubmit","this","type","name","onChange","value","StyledDiv","div","StyledH1","h1","Sypht","React","DateCalculator","PieLoader","App","config","method","url","headers","Accept","response","status","setItem","JSON","stringify","fetchToken","Header","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e25fd30.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { BASE_URL, CALCULATOR_URL, PIE_LOADER_URL } from '../../App';\n\nconst StyledNav = styled.nav`\n    \n    margin:0;\n    box-sizing: border-box;\n    border-bottom:1px solid lightgrey;\n`;\n\nconst StyleUl = styled.ul`\n    padding:0;\n    box-sizing: border-box;\n    display:flex;\n`;\n\nconst StyledLi = styled.li`\n    display:inline;\n    box-sizing: border-box;\n    \n`;\n\nconst StyledLink = styled(Link)`\n  box-sizing: border-box;\n  color: lightgrey;\n  font-size: 34px;\n  line-height: 40px;\n  padding: 30px;\n  font-family: helvetica;\n  text-decoration: none;\n  transition: 0.2s ease-in;\n  :hover {\n    color: grey;\n    font-size: 40px;\n    line-height: 40px;\n  }\n  @media only screen and (max-width: 600px) {\n      padding:15px;\n    font-size: 14px;\n    line-height: 20px;\n    :hover {\n      font-size: 20px;\n      line-height: 20px;\n    }\n  }\n`;\n\nexport class header extends Component {\n    render() {\n        return (\n            <StyledNav className=\"sypth-navigation\">\n                <StyleUl>\n                    <StyledLi><StyledLink to={BASE_URL}>Sypth</StyledLink></StyledLi>\n                    <StyledLi><StyledLink to={CALCULATOR_URL}>Date calculator</StyledLink></StyledLi>\n                    <StyledLi><StyledLink to={PIE_LOADER_URL}>Pie Loader</StyledLink></StyledLi>\n                </StyleUl>\n            </StyledNav>\n        );\n    }\n}\n\nexport default header;\n","import React, { Component } from 'react'\nimport Axios from 'axios';\n\nexport default class FileUploader extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            selectedFile: null,\n            uploadedFile:null\n        }\n    }\n    \n    fileSelectHandler=(event) => {\n        console.log(event.target.files[0])\n        this.setState({selectedFile:event.target.files[0]})\n    }\n\n    fileUploadHandler= async(e)=>{\n        e.preventDefault();\n        const accessToken = sessionStorage.getItem('syphtToken');\n        const url= \"http://localhost:3003/upload\";\n        const formData = new FormData();\n        formData.append('file',this.state.selectedFile);\n        formData.append('syphtToken',accessToken);\n\n        console.log(this.state.selectedFile)\n        try{\n            const res = Axios.post(url,formData,{onUploadProgress: ProgressEvent=>console.log(ProgressEvent)})\n            this.setState({ uploadedFile: res.data });\n         }catch(e){\n             console.log(e)\n        }\n    }\n\n    render() {\n        return (\n            <form className='file-uploader' onSubmit={this.fileUploadHandler}>\n                <input type=\"file\" name=\"document\" onChange={this.fileSelectHandler}/>\n                <input type=\"submit\" value=\"upload\"/>\n            </form>\n        )\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport FileUploader from './file-uploader/FileUploader';\n\nconst StyledDiv = styled.div`\n    padding:30px;\n`;\n\nconst StyledH1 = styled.h1`\n    margin-top:0;\n`;\nclass Sypht extends React.Component{\n\n   \n    render(){\n        return (\n            <StyledDiv>\n                <StyledH1>Sypht</StyledH1>\n                <FileUploader/>\n\n            </StyledDiv>\n            \n        );\n    }\n}\n\nexport default Sypht;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div `\n    padding:30px;\n`;\nconst StyledH1 = styled.h1`\n  margin-top: 0;\n`;\n\nclass DateCalculator extends React.Component{\n    render(){\n        return (\n          <StyledDiv>\n           \n              <StyledH1>DateCalculator</StyledH1>\n            \n          </StyledDiv>\n        );\n    }\n}\n\nexport default DateCalculator;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div `\n    padding:30px;\n`;\n\nconst StyledH1 = styled.h1`\n  margin-top: 0;\n`;\nclass PieLoader extends React.Component{\n    render(){\n        return (\n          <StyledDiv>\n            <StyledH1>Pie Loader</StyledH1>\n          </StyledDiv>\n        );\n    }\n}\n\nexport default PieLoader;\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Header from './component/header/Header';\nimport Sypht from './pages/sypht/Sypht.jsx';\nimport DateCalculator from './pages/date-calculator/DateCalculator.jsx';\nimport PieLoader from './pages/pie-loader/PieLoader.jsx';\nimport Axios from 'axios';\n\nexport const BASE_URL = \"/Sypht\";\nexport const CALCULATOR_URL = `${BASE_URL}/date-calculator`;\nexport const PIE_LOADER_URL =`${BASE_URL}/pie-loader`;\n\nclass App extends React.Component {\n\n  async fetchToken(){\n      try{\n          const config = {\n            method: \"post\",\n            url: \"http://localhost:3003/token\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            }\n          };\n          const response = await Axios(config);\n\n          if(response.status === 200){\n              sessionStorage.setItem(\n                \"syphtToken\",\n                JSON.stringify(response.data)\n              );\n          }else{\n            console.log(response.status);\n          }\n\n      }catch(e){\n        console.log(e)\n      }\n    }\n\n  componentDidMount(){\n    this.fetchToken()\n  }\n\n  render(){\n    return (\n    <Router>\n      <div>\n        <Header/>\n        <Route exact={true} path={CALCULATOR_URL} component={DateCalculator}/>\n        <Route exact={true} path={PIE_LOADER_URL} component={PieLoader}/>\n        <Route exact={true} path={BASE_URL} component={Sypht}/>\n      </div>\n    </Router>\n  );\n  }\n}\n   \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}